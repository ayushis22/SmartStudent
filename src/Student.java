/**
 * Represents a Student entity with personal and academic information.
 */
public class Student {
    private int id;
    private String name;
    private String rollNo;
    private String department;
    private String email;
    private String phone;
    private int[] subjectMarks = new int[3]; // Marks for 3 subjects

    /**
     * Constructor with ID (used when reading from database).
     * @param id            Student ID (auto-generated by DB)
     * @param name          Student name
     * @param rollNo        Roll number
     * @param department    Department name
     * @param email         Email address
     * @param phone         Phone number
     * @param subjectMarks  Array of marks for 3 subjects
     */
    public Student(int id, String name, String rollNo, String department, String email, String phone, int[] subjectMarks) {
        this.id = id;
        this.name = name;
        this.rollNo = rollNo;
        this.department = department;
        this.email = email;
        this.phone = phone;
        this.subjectMarks = subjectMarks;
    }

    /**
     * Constructor without ID (used when inserting new student).
     */
    public Student(String name, String rollNo, String department, String email, String phone, int[] subjectMarks) {
        this(0, name, rollNo, department, email, phone, subjectMarks);
    }

    // Getters for each field
    public int getId() { return id; }
    public String getName() { return name; }
    public String getRollNo() { return rollNo; }
    public String getDepartment() { return department; }
    public String getEmail() { return email; }
    public String getPhone() { return phone; }
    public int[] getSubjectMarks() { return subjectMarks; }

    /**
     * Calculates the total marks across all subjects.
     * @return Total of subject1 + subject2 + subject3
     */
    public int getTotalMarks() {
        return subjectMarks[0] + subjectMarks[1] + subjectMarks[2];
    }

    /**
     * Calculates and returns the grade based on average marks.
     * @return Grade as a letter (A+, A, B, C, or F)
     */
    public String getGrade() {
        double avg = getTotalMarks() / 3.0;
        if (avg >= 90.0) return "A+";
        else if (avg >= 80.0) return "A";
        else if (avg >= 70.0) return "B";
        else if (avg >= 60.0) return "C";
        else return "F";
    }
}
